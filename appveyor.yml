version: "{build}"

environment:
  matrix:
    - ARCHITECTURE: "x86"
      PYTHON_VERSION: "3.4"
      PYTHON: "C:\\Python34"
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.4"
      PYTHON: "C:\\Python34-x64"
    - ARCHITECTURE: "x86"
      PYTHON_VERSION: "3.5"
      PYTHON: "C:\\Python35"
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.5"
      PYTHON: "C:\\Python35-x64"
    - ARCHITECTURE: "x86"
      PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Python36"
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.6"
      PYTHON: "C:\\Python36-x64"

matrix:
  allow_failures:
    - ARCHITECTURE: "x64"
      PYTHON_VERSION: "3.4"
      PYTHON: "C:\\Python34-x64"

init:
  - set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%

install:
  - pip install -U pip
  - pip install -U -r dev_requirements.txt

build: off

test_script:
  - set TEST_PACKAGING=1
  - python -m coverage run --branch --source . -m unittest discover --verbose

after_test:
  - python -m coverage report --show-missing
  - codecov
  # Bintray artifact preparation
  - pip install version_query
  - for /f %%i in ('python -m version_query -p .') do set VERSION=%%i
  - set PLATFORM=windows%ARCHITECTURE%-python%PYTHON_VERSION%
  - ps: Invoke-WebRequest "https://gist.githubusercontent.com/mbdevpl/cdbc3dab3ae1941870dcaa5bb1b358bc/raw/appveyor_bintray_packager.py" -OutFile "appveyor_bintray_packager.py"
  - python appveyor_bintray_packager.py %VERSION% %PLATFORM% dist\*.tar.gz dist\*.whl dist\*.zip

artifacts:
  - path: dist\*.tar.gz
  - path: dist\*.whl
  - path: dist\*.zip
  - path: '*-bintray.zip'

deploy:
  - provider: BinTray
    username: $(APPVEYOR_ACCOUNT_NAME)
    api_key:
      secure: cMLbWadS24XyCD5RU3XM+2GrgqtTfoBgKwkQXyDyVa/3QOF1rXheHki+BRXP5tLo
    subject: $(APPVEYOR_ACCOUNT_NAME)
    repo: pkgs
    package: $(APPVEYOR_PROJECT_NAME)
    version: $(VERSION)
    publish: true
    override: true
    explode: true
    artifact: /.*-bintray\.zip/
